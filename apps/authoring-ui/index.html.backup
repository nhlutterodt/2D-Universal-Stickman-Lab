<!DOCTYPE html><html lang="en"><head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>2D Character Creator</title>
  <meta name="description" content="Create, edit, and save 2D stickman characters with a modern, interactive UI.">
  <link rel="icon" type="image/svg+xml" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'><circle cx='16' cy='16' r='16' fill='%234f46e5'/><text x='16' y='22' font-size='16' text-anchor='middle' fill='white'>2D</text></svg>">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&amp;display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background-color: #f0f4f8;
      color: #334155;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
      box-sizing: border-box;
    }
    .container {
      display: flex;
      flex-direction: column;
      background-color: #ffffff;
      border-radius: 12px;
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      width: 100%;
      max-width: 1200px;
      height: 90vh;
    }
    .header {
      background-color: #4f46e5;
      color: #ffffff;
      padding: 1rem 1.5rem;
      font-size: 1.5rem;
      font-weight: 600;
      border-top-left-radius: 12px;
      border-top-right-radius: 12px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .main-content {
      display: flex;
      flex-grow: 1;
      padding: 1.5rem;
      gap: 1.5rem;
      flex-wrap: wrap;
    }
    .canvas-container {
      flex: 3;
      min-width: 300px;
      background-color: #e2e8f0;
      border-radius: 8px;
      overflow: hidden;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.06);
    }
    canvas {
      display: block;
      background-color: transparent;
    }
    .controls {
      flex: 1;
      min-width: 280px;
      background-color: #f8fafc;
      border-radius: 8px;
      padding: 1.5rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
      overflow-y: auto;
    }
    .control-group {
      margin-bottom: 1rem;
    }
    .control-group label {
      display: block;
      font-weight: 600;
      margin-bottom: 0.5rem;
      color: #475569;
    }
    .input-field {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid #cbd5e1;
      border-radius: 6px;
      font-size: 1rem;
      box-sizing: border-box;
      background-color: #ffffff;
      color: #334155;
    }
    .button {
      display: inline-flex;
      justify-content: center;
      align-items: center;
      padding: 0.8rem 1.2rem;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease-in-out;
      text-align: center;
      white-space: nowrap;
    }
    .button-primary {
      background-color: #4f46e5;
      color: #ffffff;
      border: 1px solid #4f46e5;
      box-shadow: 0 4px 6px rgba(79, 70, 229, 0.2);
    }
    .button-primary:hover {
      background-color: #4338ca;
      border-color: #4338ca;
      box-shadow: 0 6px 10px rgba(79, 70, 229, 0.3);
      transform: translateY(-2px);
    }
    .button-secondary {
      background-color: #e2e8f0;
      color: #475569;
      border: 1px solid #cbd5e1;
    }
    .button-secondary:hover {
      background-color: #cbd5e1;
      border-color: #94a3b8;
      transform: translateY(-1px);
    }
    .bone-list {
      list-style: none;
      padding: 0;
      margin-top: 0.5rem;
    }
    .bone-list-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.6rem 0.8rem;
      background-color: #ffffff;
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      margin-bottom: 0.4rem;
      font-size: 0.95rem;
      color: #334155;
      cursor: pointer;
      transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    }
    .bone-list-item:hover {
      background-color: #f0f4f8;
      border-color: #cbd5e1;
    }
    .bone-list-item.selected {
      background-color: #bfdbfe;
      border-color: #3b82f6;
      font-weight: 600;
      color: #1e3a8a;
    }
    .sliders {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }
    .slider-group {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .slider-group input[type="range"] {
      flex-grow: 1;
      -webkit-appearance: none;
      appearance: none;
      height: 8px;
      background: #d1d5db;
      border-radius: 5px;
      outline: none;
      opacity: 0.7;
      transition: opacity .15s ease-in-out;
    }
    .slider-group input[type="range"]::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: #4f46e5;
      cursor: grab;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      transition: background-color 0.15s ease-in-out;
    }
    .slider-group input[type="range"]::-webkit-slider-thumb:hover {
      background: #4338ca;
    }
    .slider-group span {
      font-size: 0.9rem;
      width: 40px;
      text-align: right;
      color: #475569;
    }
    .form-row {
      display: flex;
      gap: 1rem;
      align-items: flex-end;
    }
    .form-row > div {
      flex-grow: 1;
    }
    .button-group {
      display: flex;
      gap: 0.75rem;
    }
    .message-box {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: rgba(0, 0, 0, 0.8);
      color: #ffffff;
      padding: 15px 25px;
      border-radius: 8px;
      font-size: 1rem;
      z-index: 1000;
      display: none;
      text-align: center;
    }
    .message-box.show {
      display: block;
    }
    .color-selection {
      margin-bottom: 1rem;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
    .color-selection label {
      font-weight: 500;
      color: #475569;
    }
    .stats, .preview {
      margin-top: 1.5rem;
      background: #f1f5f9;
      border-radius: 8px;
      padding: 1rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.03);
    }
    .stats h2, .preview h2 {
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
    }
    @media (max-width: 768px) {
      .main-content {
        flex-direction: column;
      }
      .canvas-container, .controls {
        flex: none;
        width: 100%;
      }
      .container {
        height: auto;
        min-height: 90vh;
      }
    }
  </style>
<meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none';"><meta http-equiv="X-Content-Type-Options" content="nosniff"><meta http-equiv="X-Frame-Options" content="DENY"><meta http-equiv="X-XSS-Protection" content="1; mode=block"><meta http-equiv="Referrer-Policy" content="strict-origin-when-cross-origin"></head>
<body>
  <div class="container">
    <div class="header">
      <span>2D Character Creator</span>
      <div class="button-group">
        <button id="saveCharacterBtn" class="button button-secondary">Save Character</button>
        <button id="loadCharacterBtn" class="button button-secondary">Load Character</button>
        <button id="resetCharacterBtn" class="button button-secondary">Reset Character</button>
      </div>
    </div>
    <input type="file" id="loadCharacterInput" accept=".json" aria-label="Load Character File" style="display:none;">
    <div class="main-content">
      <div class="canvas-container">
        <canvas id="characterCanvas" aria-label="Character Preview Canvas"></canvas>
        <div id="messageBox" class="message-box" role="status" aria-live="polite"></div>
      </div>
      <div class="controls">
        <div class="control-group">
          <label for="boneNameInput">Bone Name</label>
          <div class="form-row">
            <div>
              <input type="text" id="boneNameInput" class="input-field" placeholder="e.g., upperArm" aria-label="Bone Name">
            </div>
            <button id="addBoneBtn" class="button button-primary">Add Bone</button>
          </div>
        </div>
        <div class="control-group">
          <label for="boneList">Bones</label>
          <ul id="boneList" class="bone-list" aria-label="Bone List">
            <!-- Bone items will be injected here by JS -->
          </ul>
        </div>
        <div class="control-group">
          <label for="boneLengthSlider">Selected Bone Properties</label>
          <div class="sliders">
            <div class="slider-group">
              <span>Length:</span>
              <input type="range" id="boneLengthSlider" min="10" max="150" value="50" title="Bone Length" aria-label="Bone Length">
              <span id="boneLengthValue">50</span>
            </div>
            <div class="slider-group">
              <span>Rotation:</span>
              <input type="range" id="boneRotationSlider" min="-180" max="180" value="0" title="Bone Rotation" aria-label="Bone Rotation">
              <span id="boneRotationValue">0Â°</span>
            </div>
            <div class="slider-group">
              <span>X Pos:</span>
              <input type="range" id="boneXSlider" min="-300" max="300" value="0" title="Bone X Position" aria-label="Bone X Position">
              <span id="boneXValue">0</span>
            </div>
            <div class="slider-group">
              <span>Y Pos:</span>
              <input type="range" id="boneYSlider" min="-300" max="300" value="0" title="Bone Y Position" aria-label="Bone Y Position">
              <span id="boneYValue">0</span>
            </div>
          </div>
          <button id="deleteBoneBtn" class="button button-secondary mt-4">Delete Selected Bone</button>
        </div>
        <div class="control-group color-selection">
          <label for="color1">Primary Color:</label>
          <input type="color" id="color1" name="color1" value="#ff0000" title="Choose primary color" aria-label="Primary Color">
          <label for="color2">Secondary Color:</label>
          <input type="color" id="color2" name="color2" value="#00ffff" title="Choose secondary color" aria-label="Secondary Color">
        </div>
        <div class="preview">
          <h2>Character Preview</h2>
          <div id="preview-limbs" aria-label="Character Limbs Preview"></div>
        </div>
        <div class="stats">
          <h2>Character Stats</h2>
          <p id="elemental-strength"></p>
          <p id="weakness"></p>
          <p id="stats-explanation"></p>
        </div>
      </div>
    </div>
  </div>
  <script src="../dist/apps/authoring-ui/src/main.js" type="module"></script>
</body></html>
